@page "/categories"
@inject CategoryService CategoryService

<h3>Categories</h3>

<!-- Form for adding and editing categories -->
<EditForm Model="category" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="categoryName">Category Name:</label>
        <InputText id="categoryName" @bind-Value="category.Name" class="form-control" />
    </div>

    <div class="mt-2">
        <button type="submit" class="btn btn-primary">@((isEditMode) ? "Update" : "Add") Category</button>
        <button type="button" class="btn btn-secondary" @onclick="ClearForm">Cancel</button>
    </div>
</EditForm>

<hr />

<!-- List of Categories -->
@if (categories != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cat in categories)
            {
                <tr>
                    <td>@cat.Id</td>
                    <td>@cat.Name</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditCategory(cat.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteCategory(cat.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Category> categories;
    private Category category = new Category();
    private bool isEditMode = false;
    private Category originalCategory = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        categories = await CategoryService.GetCategoriesAsync();
    }

    private async Task HandleValidSubmit()
    {
        if (isEditMode)
        {
            // Update the existing category
            await CategoryService.UpdateCategoryAsync(category);
        }
        else
        {
            // Add new category
            await CategoryService.AddCategoryAsync(category);
        }

        // Reload categories and clear form
        await LoadCategories();
        ClearForm();
    }

    private void ClearForm()
    {
        
        category = new Category();
        isEditMode = false;
    }

    private async Task EditCategory(int id)
    {
        category = await CategoryService.GetCategoryByIdAsync(id);
        originalCategory = category; 
        isEditMode = true;
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteCategoryAsync(id);
        await LoadCategories();
    }
}
